name: "Terraform Plan"
description: "Run terraform plan with support for S3 backend and artifact upload."


inputs:
  terraform-dir:
    description: "Path to the Terraform configuration"
    required: false
    default: "tf"

  tf-vars-file:
    description: "Optional Terraform variable file"
    required: false
    default: "terraform.tfvars"

  s3-bucket:
    description: "S3 bucket for Terraform backend"
    required: true

  s3-region:
    description: "AWS region where the S3 bucket is located"
    required: true

  dynamodb-table:
    description: "DynamoDB table name for state locking"
    required: true

  ci-pipeline:
    description: "Set to true to use commit SHA in backend key"
    required: false
    default: "false"  # Boolean-like string

outputs:
  plan-status:
    description: "Result of terraform plan"
    value: ${{ steps.plan.outcome }}

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Compute Backend Key from Repository Name
      id: key
      run: |
        if [[ "${{ inputs.ci-pipeline }}" == "true" ]]; then
          state_key="${{ github.repository }}/${{ github.sha }}/terraform.tfstate"
        else
          state_key="${{ github.repository }}/terraform.tfstate"
        fi
        echo "s3_key=$state_key" >> $GITHUB_OUTPUT
      shell: bash

    - name: Terraform Init with S3 Backend
      run: |
        terraform init -input=false \
          -backend-config="bucket=${{ inputs.s3-bucket }}" \
          -backend-config="key=${{ steps.key.outputs.s3_key }}" \
          -backend-config="region=${{ inputs.s3-region }}" \
          -backend-config="encrypt=true" \
          -backend-config="dynamodb_table=${{ inputs.dynamodb-table }}"
      shell: bash
      working-directory: ${{ github.workspace }}/${{ inputs.terraform-dir }}

    - name: Terraform Plan and Save Output
      id: plan
      run: |
        PLAN_FILE=tfplan.out
        echo "### Terraform Plan" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        terraform plan -input=false -out=$PLAN_FILE -var-file=${{ inputs.tf-vars-file }} | tee $PLAN_FILE
        echo "\`\`\`hcl" >> $GITHUB_STEP_SUMMARY
        cat $PLAN_FILE >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
      shell: bash
      working-directory: ${{ github.workspace }}/${{ inputs.terraform-dir }}

    - name: Upload Plan Output as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: terraform-plan
        path: |
          tfplan.out
      working-directory: ${{ github.workspace }}/${{ inputs.terraform-dir }}
