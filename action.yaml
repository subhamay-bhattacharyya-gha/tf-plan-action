name: "Terraform Plan"
description: "Run terraform plan with support for S3 backend and artifact upload."


inputs:
  release-tag:
    description: 'Optional release tag to checkout'
    required: false
    type: string
    default: ''

  terraform-dir:
    description: "Path to the Terraform configuration"
    required: false
    default: "tf"

  s3-bucket:
    description: "S3 bucket for Terraform backend"
    required: true

  s3-region:
    description: "AWS region where the S3 bucket is located"
    required: true

  tf-plan-file:
    description: "File to save the Terraform plan output"
    required: false
    default: "tfplan"  

  tf-vars-file:
    description: "Optional Terraform variable file"
    required: false
    default: "terraform.tfvars"

  tf-plan-name:
    description: "Name of the Terraform plan file"
    required: false
    default: "terraform-plan"

  ci-pipeline:
    description: "Set to true to use commit SHA in backend key"
    required: false
    default: "false"  # Boolean-like string

outputs:
  plan-status:
    description: "Result of terraform plan"
    value: ${{ steps.plan.outcome }}

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
          ref: ${{ inputs.release_tag || github.ref_name }} 

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Compute Backend Key from Repository Name
      id: tf-state-key
      shell: bash
      working-directory: ${{ github.workspace }}/${{ inputs.terraform-dir }}
      run: |

        if [[ "${{ inputs.ci-pipeline }}" == "true" ]]; then
          state_key="${{ github.repository }}/${{ github.sha }}/terraform.tfstate"
        else
          state_key="${{ github.repository }}/terraform.tfstate"
        fi
        echo "s3_key=$state_key" >> $GITHUB_OUTPUT
      shell: bash

    - name: Terraform Init with S3 Backend
      id: tf-init
      shell: bash
      working-directory: ${{ github.workspace }}/${{ inputs.terraform-dir }}
      run: |
        terraform init -input=false \
          -backend-config="bucket=${{ inputs.s3-bucket }}" \
          -backend-config="key=${{ steps.key.outputs.s3_key }}" \
          -backend-config="region=${{ inputs.s3-region }}" \
          -backend-config="encrypt=true" \
          -backend-config="use_lockfile=true"

    - name: Terraform Plan and Save Output
      id: tf-plan
      shell: bash
      working-directory: ${{ github.workspace }}/${{ inputs.terraform-dir }}
      run: |
        echo "### Terraform Plan" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        terraform plan -input=false -out=${{ inputs.tf-plan-file }}.out -var-file=${{ inputs.tf-vars-file }}
        terraform show -no-color ${{ inputs.tf-plan-file }}.out > ${{ inputs.tf-plan-file }}.txt
        echo "\`\`\`hcl" >> $GITHUB_STEP_SUMMARY
        cat ${{ inputs.tf-plan-file }}.txt >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY


    - name: Upload Plan Output as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.tf-plan-name }}
        path: |
          ${{ github.workspace }}/${{ inputs.terraform-dir }}/${{ inputs.tf-plan-file }}.out

